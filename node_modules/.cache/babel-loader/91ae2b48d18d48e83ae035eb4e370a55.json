{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\to-do\\\\to-do\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Typography from \"@material-ui/core/Typography\";\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoForm/TodoForm\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#F2E9E4'\n    },\n    secondary: {\n      main: '#C9ADA7'\n    },\n    background: {\n      main: '#22223B'\n    },\n    list: {\n      main: '#9A8C98'\n    }\n  }\n});\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        padding: 16\n      },\n      variant: \"h1\",\n      children: \"React Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleComplete: toggleComplete,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"JPZTns5sUK6f8sNf0ff2EvpSbn0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/to-do/to-do/src/App.js"],"names":["Typography","React","useState","useEffect","TodoForm","TodoList","createMuiTheme","theme","palette","primary","main","secondary","background","list","LOCAL_STORAGE_KEY","App","todos","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter","padding"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AACzBE,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KADF;AAIPC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG,KAJJ;AAOPE,IAAAA,UAAU,EAAE;AACRF,MAAAA,IAAI,EAAE;AADE,KAPL;AAUPG,IAAAA,IAAI,EAAE;AACFH,MAAAA,IAAI,EAAE;AADJ;AAVC;AADgB,CAAD,CAA5B;AAiBA,MAAMI,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBR,iBAArB,CAAX,CAArB;;AACA,QAAII,YAAJ,EAAiB;AACbD,MAAAA,QAAQ,CAACC,YAAD,CAAR;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOAf,EAAAA,SAAS,CAAC,MAAK;AACXkB,IAAAA,YAAY,CAACE,OAAb,CAAqBT,iBAArB,EAAwCK,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASS,OAAT,CAAiBC,IAAjB,EAAsB;AAClBT,IAAAA,QAAQ,CAAE,CAACS,IAAD,EAAO,GAAGV,KAAV,CAAF,CAAR;AACH;;AAED,WAASW,cAAT,CAAwBC,EAAxB,EAA2B;AACvBX,IAAAA,QAAQ,CACJD,KAAK,CAACa,GAAN,CAAUH,IAAI,IAAI;AACd,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAmB;AACf,eAAO,EACH,GAAGF,IADA;AACMI,UAAAA,SAAS,EAAC,CAACJ,IAAI,CAACI;AADtB,SAAP;AAGH;;AACD,aAAOJ,IAAP;AACH,KAPD,CADI,CAAR;AAUH;;AAED,WAASK,UAAT,CAAqBH,EAArB,EAAwB;AACpBX,IAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACQ,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACK,QAAAA,OAAO,EAAC;AAAT,OAAnB;AAAiC,MAAA,OAAO,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ,QAAC,QAAD;AAAU,MAAA,OAAO,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ,QAAC,QAAD;AAAU,MAAA,KAAK,EAAET,KAAjB;AAAwB,MAAA,cAAc,EAAEW,cAAxC;AAAwD,MAAA,UAAU,EAAEI;AAApE;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3CQhB,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import Typography from \"@material-ui/core/Typography\";\r\nimport './App.css';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport TodoForm from \"./components/TodoForm/TodoForm\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#F2E9E4',\r\n      },\r\n      secondary: {\r\n        main: '#C9ADA7',\r\n      },\r\n      background: {\r\n          main: '#22223B',\r\n      },\r\n      list: {\r\n          main: '#9A8C98'\r\n      }\r\n    },\r\n  });\r\n\r\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\r\n\r\nfunction App() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (storageTodos){\r\n            setTodos(storageTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    function addTodo(todo){\r\n        setTodos ([todo, ...todos]);\r\n    }\r\n\r\n    function toggleComplete(id){\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id){\r\n                    return {\r\n                        ...todo, completed:!todo.completed\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n        )\r\n    }\r\n\r\n    function removeTodo (id){\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n                <Typography style={{padding:16}} variant=\"h1\">React Todo</Typography>\r\n                <TodoForm addTodo={addTodo}/>\r\n                <TodoList todos={todos} toggleComplete={toggleComplete} removeTodo={removeTodo} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}