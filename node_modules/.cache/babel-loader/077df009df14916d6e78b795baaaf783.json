{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\to-do\\\\src\\\\components\\\\TodoForm\\\\TodoForm.js\";\nimport React from \"react\";\nimport uuid from 'react-uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      task: \"\",\n      completed: false\n    };\n    this.handleTaskInputChange = this.handleTaskInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTaskInputChange(e) {\n    this.setState({\n      task: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      task: this.state.task,\n      id: uuid()\n    });\n    console.log(uuid());\n    console.log(this.state.id);\n    this.props.addTodo(this.state); //reset form\n\n    this.setState({\n      id: \"\",\n      task: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"task\",\n        type: \"text\",\n        value: this.state.task,\n        onChange: this.handleTaskInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/to-do/src/components/TodoForm/TodoForm.js"],"names":["React","uuid","TodoForm","Component","constructor","props","state","id","task","completed","handleTaskInputChange","bind","handleSubmit","e","setState","target","value","preventDefault","console","log","addTodo","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,EAAE,EAAE,EADI;AAERC,MAAAA,IAAI,EAAE,EAFE;AAGRC,MAAAA,SAAS,EAAE;AAHH,KAAZ;AAMA,SAAKC,qBAAL,GAA2B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA3B;AACA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAlB;AACH;;AAEDD,EAAAA,qBAAqB,CAACG,CAAD,EAAG;AACpB,SAAKC,QAAL,CAAc;AAACN,MAAAA,IAAI,EAACK,CAAC,CAACE,MAAF,CAASC;AAAf,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACC,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACI,cAAF;AACA,SAAKH,QAAL,CAAc;AACVN,MAAAA,IAAI,EAAC,KAAKF,KAAL,CAAWE,IADN;AAEVD,MAAAA,EAAE,EAAEN,IAAI;AAFE,KAAd;AAIAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAI,EAAhB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,EAAvB;AACA,SAAKF,KAAL,CAAWe,OAAX,CAAmB,KAAKd,KAAxB,EARW,CAUX;;AACA,SAAKQ,QAAL,CAAc;AACVP,MAAAA,EAAE,EAAE,EADM;AAEVC,MAAAA,IAAI,EAAE;AAFI,KAAd;AAIH;;AAEDa,EAAAA,MAAM,GAAI;AACN,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,IAAjD;AAAuD,QAAA,QAAQ,EAAE,KAAKE;AAAtE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA3CiC;;AA+CtC,eAAeR,QAAf","sourcesContent":["import React from \"react\";\r\nimport uuid from 'react-uuid';\r\n\r\nclass TodoForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state ={\r\n            id: \"\",\r\n            task: \"\",\r\n            completed: false\r\n        }\r\n\r\n        this.handleTaskInputChange=this.handleTaskInputChange.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTaskInputChange(e){\r\n        this.setState({task:e.target.value});\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.setState({\r\n            task:this.state.task,\r\n            id: uuid()\r\n        });\r\n        console.log(uuid());\r\n        console.log(this.state.id);\r\n        this.props.addTodo(this.state);\r\n\r\n        //reset form\r\n        this.setState({\r\n            id: \"\",\r\n            task: \"\"\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input name=\"task\" type=\"text\" value={this.state.task} onChange={this.handleTaskInputChange}/>\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}