{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\to-do\\\\to-do\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport './App.css';\nimport TodoForm from \"./components/TodoForm/TodoForm\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  Container: {\n    backgroundColor: theme.palette.background.main\n  }\n}));\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.Container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            padding: 16\n          },\n          variant: \"h1\",\n          children: \"React Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n          addTodo: addTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          toggleComplete: toggleComplete,\n          removeTodo: removeTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"IFNF3bAqGYyi2slLWDAoPU27mZc=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/to-do/to-do/src/App.js"],"names":["React","useState","useEffect","Typography","makeStyles","Container","TodoForm","TodoList","useStyles","theme","backgroundColor","palette","background","main","LOCAL_STORAGE_KEY","App","classes","todos","setTodos","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","todo","toggleComplete","id","map","completed","removeTodo","filter","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEE,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC;AADnC;AAD4B,CAAZ,CAAD,CAA5B;AAMF,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,iBAArB,CAAX,CAArB;;AACA,QAAIK,YAAJ,EAAiB;AACbD,MAAAA,QAAQ,CAACC,YAAD,CAAR;AACH;AACJ,GALQ,EAKN,EALM,CAAT;AAOAjB,EAAAA,SAAS,CAAC,MAAK;AACXoB,IAAAA,YAAY,CAACE,OAAb,CAAqBV,iBAArB,EAAwCM,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAxC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASS,OAAT,CAAiBC,IAAjB,EAAsB;AAClBT,IAAAA,QAAQ,CAAE,CAACS,IAAD,EAAO,GAAGV,KAAV,CAAF,CAAR;AACH;;AAED,WAASW,cAAT,CAAwBC,EAAxB,EAA2B;AACvBX,IAAAA,QAAQ,CACJD,KAAK,CAACa,GAAN,CAAUH,IAAI,IAAI;AACd,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAmB;AACf,eAAO,EACH,GAAGF,IADA;AACMI,UAAAA,SAAS,EAAC,CAACJ,IAAI,CAACI;AADtB,SAAP;AAGH;;AACD,aAAOJ,IAAP;AACH,KAPD,CADI,CAAR;AAUH;;AAED,WAASK,UAAT,CAAqBH,EAArB,EAAwB;AACpBX,IAAAA,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH;;AAED,sBACO,QAAC,SAAD;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEb,OAAO,CAACX,SAA9B;AAAA,6BACK;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAC6B,YAAAA,OAAO,EAAC;AAAT,WAAnB;AAAiC,UAAA,OAAO,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,OAAO,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAET,KAAjB;AAAwB,UAAA,cAAc,EAAEW,cAAxC;AAAwD,UAAA,UAAU,EAAEI;AAApE;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADP;AAWH;;GA/CQjB,G;UACWP,S;;;KADXO,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport './App.css';\r\nimport TodoForm from \"./components/TodoForm/TodoForm\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    Container: {\r\n        backgroundColor: theme.palette.background.main\r\n    }\r\n  }));\r\n\r\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n        if (storageTodos){\r\n            setTodos(storageTodos);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    function addTodo(todo){\r\n        setTodos ([todo, ...todos]);\r\n    }\r\n\r\n    function toggleComplete(id){\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id){\r\n                    return {\r\n                        ...todo, completed:!todo.completed\r\n                    }\r\n                }\r\n                return todo;\r\n            })\r\n        )\r\n    }\r\n\r\n    function removeTodo (id){\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    return (\r\n           <Container>\r\n               <Container className={classes.Container}>\r\n                    <div className=\"App\">\r\n                        <Typography style={{padding:16}} variant=\"h1\">React Todo</Typography>\r\n                        <TodoForm addTodo={addTodo}/>\r\n                        <TodoList todos={todos} toggleComplete={toggleComplete} removeTodo={removeTodo} />\r\n                    </div>\r\n                </Container>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}